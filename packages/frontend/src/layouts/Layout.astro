---
import '@fontsource/geist-sans/400.css' // Specify weight
import '@fontsource/geist-sans/500.css' // Specify weight
import '@fontsource/geist-sans/600.css' // Specify weight
import '@fontsource/geist-sans/700.css' // Specify weight

import '../app.css'
import { Header } from '../components/Header'
import Footer from '../components/Footer.astro'
import { getProfile } from '../modules/requests'
import { cn } from '../modules/utils'

export interface Props {
  meta?: {
    description: string
    image: string
    url: string
    title: string
  }
  contentContainerClasses?: string
}

const profile = await getProfile()
const { contentContainerClasses } = Astro.props
const meta = {
  description: profile.bio,
  image: '/avatar.jpg',
  url: 'https://sutter-nicolas.com',
  title: profile.name,
  ...(Astro.props.meta ?? {}),
}
---

<!doctype html>
<html
  lang='en'
  class='text-foreground/85 bg-background'
>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='viewport'
      content='width=device-width'
    />
    <link
      rel='icon'
      type='image/svg+xml'
      href='/favicon.svg'
    />
    <meta
      name='generator'
      content={Astro.generator}
    />

    <title>{meta.title}</title>

    <meta
      name='description'
      content={meta.description}
    />
    <meta
      name='og:description'
      content={meta.description}
    />
    <meta
      name='og:image'
      content={meta.image}
    />
    <meta
      name='og:type'
      content='website'
    />
    <meta
      name='og:url'
      content={meta.url}
    />
    <meta
      name='og:title'
      content={meta.title}
    />

    <!-- does the default theme set up -->
    <script
      is:inline
      src='/theme.vanilla.js'
    ></script>

    <!-- does the reactivity of theme toggle -->
    <script>
      import '../modules/theme'
    </script>
  </head>

  <body
    class='[&_*]:outline-none [&_*]:focus-visible:ring-ring [&_*]:focus-visible:ring-1'
  >
    <Header
      client:load
      profile={profile}
    />

    <div
      style={`--gutter: minmax(2rem, auto);`}
      class={cn(
        'grid grid-cols-[var(--gutter)_minmax(auto,var(--base-container))_var(--gutter)] [:where(&>*)]:col-start-2 pb-10',
        // reserve space for header
        'mt-32',
        contentContainerClasses,
      )}
    >
      <slot />
    </div>

    <Footer profile={profile} />
  </body>

  <style is:global>
    * {
      min-width: 0;
    }
  </style>
</html>
